{"ast":null,"code":"var _jsxFileName = \"/Users/dudleyd/GIT/steviegenerator/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"./Quote.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotes = [{\n  quote: \"I didn’t want to piss on his battery\",\n  source: \"McCann, S\"\n}, {\n  quote: \"Really going to get into the beef and gravy of it today\",\n  source: \"McCann, S\"\n}, {\n  quote: \"A lie can travel halfway around the world while the truth is putting on its shoes\",\n  source: \"McCann, S\"\n}, {\n  quote: \"I don’t have an example to show you, but if you go into your minds eye for a moment and imagine it\",\n  source: \"McCann, S\"\n}, {\n  quote: \"Feels like I’ve picked up a car instead of using a hammer\",\n  source: \"McCann, S\"\n}];\n\nconst App = () => {\n  function randomQuote() {\n    let random = quotes[Math.floor(Math.random() * quotes.length)];\n    quotation.innerText = `“${random.quote}.”`;\n    source.innerText = random.source;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"blockquote\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"quotation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"genquote\",\n        children: \"Generate Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dudleyd/GIT/steviegenerator/src/App.js"],"names":["React","quotes","quote","source","App","randomQuote","random","Math","floor","length","quotation","innerText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,aAAP;;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,KAAK,EAAE,sCADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADa,EAKb;AACED,EAAAA,KAAK,EAAE,yDADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CALa,EASb;AACED,EAAAA,KAAK,EACH,mFAFJ;AAGEC,EAAAA,MAAM,EAAE;AAHV,CATa,EAcb;AACED,EAAAA,KAAK,EACH,oGAFJ;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAda,EAmBb;AACED,EAAAA,KAAK,EAAE,2DADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAnBa,CAAf;;AAyBA,MAAMC,GAAG,GAAG,MAAM;AAChB,WAASC,WAAT,GAAuB;AACrB,QAAIC,MAAM,GAAGL,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBL,MAAM,CAACQ,MAAlC,CAAD,CAAnB;AACAC,IAAAA,SAAS,CAACC,SAAV,GAAuB,IAAGL,MAAM,CAACJ,KAAM,IAAvC;AACAC,IAAAA,MAAM,CAACQ,SAAP,GAAmBL,MAAM,CAACH,MAA1B;AACD;;AAED,sBACE;AAAA,4BACE;AAAG,MAAA,EAAE,EAAC;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAG,QAAA,EAAE,EAAC;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;KAAMC,G;AAkBN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./Quote.css\";\n\nconst quotes = [\n  {\n    quote: \"I didn’t want to piss on his battery\",\n    source: \"McCann, S\",\n  },\n  {\n    quote: \"Really going to get into the beef and gravy of it today\",\n    source: \"McCann, S\",\n  },\n  {\n    quote:\n      \"A lie can travel halfway around the world while the truth is putting on its shoes\",\n    source: \"McCann, S\",\n  },\n  {\n    quote:\n      \"I don’t have an example to show you, but if you go into your minds eye for a moment and imagine it\",\n    source: \"McCann, S\",\n  },\n  {\n    quote: \"Feels like I’ve picked up a car instead of using a hammer\",\n    source: \"McCann, S\",\n  },\n];\n\nconst App = () => {\n  function randomQuote() {\n    let random = quotes[Math.floor(Math.random() * quotes.length)];\n    quotation.innerText = `“${random.quote}.”`;\n    source.innerText = random.source;\n  }\n\n  return (\n    <blockquote>\n      <p id=\"quotation\"></p>\n      <footer>\n        <p id=\"source\"></p>\n        <button id=\"genquote\" >Generate Quote</button>\n      </footer>\n    </blockquote>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}